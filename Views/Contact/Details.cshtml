@model Contact
@{
    string fname = ViewBag.Action + " Contact";
    ViewBag.FirstName = fname;
}
<h2>@ViewBag.Title</h2>
<div>
    <h2>Contact Details</h2>
    <hr />
    <dl class="row border" >

        <!--Iterates through properties to dynamically create table display, much cleaner look-->
        @foreach (var property in typeof(Contact).GetProperties())
        {
            var propertyName = property.Name;

            //Excluding properties that contain "Id" or "Slug"
            if (!propertyName.Contains("Id") && !propertyName.Contains("Slug"))
            {

                //for display, checks for Pascal/Camel case to display in normal reading format eg. FirstName => First Name
                var displayName = Regex.Replace(propertyName, @"(\p{Lu})", " $1").TrimStart();

                //Due to improper property display with joined columns a targeted naming is doen for this single column categoryName
                if(propertyName == "Category"){ //targeting Category

                    <dt class="col-sm-2">
                        @Html.DisplayName(displayName) <!--Labeling Property in column 1-->
                    </dt>

                    <dd class="col-sm-10 border-top ">
                        @Html.DisplayFor(model => model.Category.CategoryName) <!--Displaying Property Value in column 2-->
                    </dd>

                } else {
                    <dt class="col-sm-2"> 
                        @Html.DisplayName(displayName) <!--Labeling Property in column 1-->
                    </dt>

                    <dd class="col-sm-10 border-top"> 
                        @property.GetValue(Model) <!--Displaying Property Value in column 2-->
                    </dd>
                }
                
            }
        }
    </dl>
</div>
<div>
    <!--Buttons will Route with Object specific Values-->
    
    <!--Edit Button (Send user to Contacts/Edit View)-->
    <a asp-controller="Contact" asp-action="Edit" 
       asp-route-id="@Model.ContactId"
       asp-route-slug="@Model.Slug.Replace(" ","-")"
       class="btn btn-outline-secondary">
        Edit
    </a>

    <!--Delete Button (Send user to Contacts/Delete View)-->
    <a asp-controller="Contact" asp-action="Delete"
       asp-route-id="@Model.ContactId"
       asp-route-slug="@Model.Slug.Replace(" ","-")"
       class="btn btn-outline-danger">
        Delete
    </a>

    <!--Home Button (Send user to Home/Index View)-->
    <a asp-controller="Home" asp-action="Index"
       class="btn btn-outline-primary">
        Home
    </a>
</div>
